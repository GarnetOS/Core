# This is a basic workflow to help you get started with Actions

name: Preprare 

# Controls when the workflow will run
on:

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
          arch: [armv6,armv7,aarch64,amd64,s390x,ppc64le,mips64le,i386]
          distro: [bullseye]
          include:
            - arch: riscv64
              distro: unstable
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: GarnetOS/run-on-arch-action@v2.1.2
        name: Download and release
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
        with:
          arch: ${{matrix.arch}}
          distro: ${{matrix.distro}}
          setup: |
            mkdir -p "${PWD}/out"
          dockerRunArgs: |
            --volume "${PWD}/out:/out"
          run: |
            uname -a
            apt update
            apt install -y wget zip util-linux
            apt install -y gcc g++ gzip libc6 grep make patch perl python3 sed tar xz-utils binutils bison bzip2 coreutils diffutils findutils gawk texinfo
            rm /bin/sh
            ln -s /bin/bash /bin/sh
            wget https://gist.githubusercontent.com/radimkohout/5f0e6ad2bd899d8f2a6b3636148664cb/raw/e5057e34464c621f0302dfe5a9ba7798b3649965/checkhost.sh
            chmod +x checkhost.sh
            ./checkhost.sh
            fallocate -l 25G out/VHD.img 
            mkfs -v -t ext4 out/VHD.img
            mkdir /mnt/lfs
            mount out/VHD.img /mnt/lfs
            export LFS=/mnt/lfs
            mkdir -v $LFS/sources
            chmod -v a+wt $LFS/sources
            wget https://www.linuxfromscratch.org/lfs/downloads/stable/wget-list
            wget --input-file=wget-list --continue --directory-prefix=$LFS/sources
            mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin}
            for i in bin lib sbin; do
              ln -sv usr/$i $LFS/$i
            done
            case $(uname -m) in
              x86_64) mkdir -pv $LFS/lib64 ;;
            esac
            mkdir -pv $LFS/tools
      - uses: actions/upload-artifact@v2
        with:
          name: out-${{matrix.arch}}-00
          path: out/VHD.img
