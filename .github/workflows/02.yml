name: 02 build

on:
  repository_dispatch:
    types: [run-another-2] 
  workflow_dispatch:
    inputs:
      package:
        description: 'Config number'     
        required: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
          arch: [armv6,armv7,aarch64,amd64,ppc64le,i386]
          distro: [bullseye]
          #include:
          #  - arch: riscv64
          #    distro: unstable
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Prepare host
        run: |
            sudo apt-get purge -y dotnet* gfortran gfortran* android-sdk
            sudo apt install curl wget grep
            sudo rm -r /usr/share/dotnet/ /usr/local/lib/android/sdk
            wget https://dl.min.io/client/mc/release/linux-amd64/mcli_20220416211121.0.0_amd64.deb
            sudo dpkg -i mcli_20220416211121.0.0_amd64.deb
            mcli alias set myminio/ http://${{ secrets.MINIO_IP }}:9000 ${{ secrets.MINIO_ACCESS }} ${{ secrets.MINIO_SECRET }}
            export CURR=$(([ -z "${{ github.event.inputs.package }}" ] && echo ${{github.event.client_payload.number}})||echo ${{ github.event.inputs.package }})
            echo "CURR=$(($CURR))" >> $GITHUB_ENV
            echo "PREV=$(($CURR-1))" >> $GITHUB_ENV
            echo "NEXT=$(($CURR+1))" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        name: Checkout
      #- name: Download artifact
      #  uses: GarnetOS/action-download-artifact@new
      #  with:
      #    workflow: 01.yml
      #    name: out-${{matrix.arch}}-${{env.PREV}}
      - name: Download
        run: |
            mcli cp myminio/bucket/out-${{matrix.arch}}.tar.gz out.tar.gz
      - name: Prepare image
        run: |
            pwd
            sudo ls
            sudo apt install -y util-linux wget zip
            sudo mkdir /mnt/lfs
            tar -xvf out.tar.gz
            sudo mount -o suid VHD.img /mnt/lfs
            sudo ls 
      - uses: GarnetOS/run-on-arch-action@v2.1.2
        name: Download and release
        with:
          arch: ${{matrix.arch}}
          distro: ${{matrix.distro}}
          setup: |
            
          dockerRunArgs: |
            --volume "/mnt/lfs:/mnt/lfs"
            --volume "${PWD}/02:${PWD}/02"
          run: |
            uname -a
            apt update
            apt install -y wget zip util-linux timelimit sudo 
            apt install -y gcc g++ gzip libc6 grep make patch perl python3 sed tar xz-utils binutils bison bzip2 coreutils diffutils findutils gawk texinfo flex
            rm /bin/sh
            ln -s /bin/bash /bin/sh
            export LFS=/mnt/lfs
            useradd -m -s /bin/bash lfs
            chmod +x -R 02
            cd 02
            chown lfs prepare
            export LC_ALL=POSIX
            case $(uname -m) in
                arm*) LFS_TGT=$(uname -m)-lfs-linux-gnueabihf ;;
                *) LFS_TGT=$(uname -m)-lfs-linux-gnu ;;
            esac
            chown root:root /usr/bin/sudo
            chmod u+s /usr/bin/sudo
            export LFS_TGT
            PATH=/usr/bin
            if [ ! -L /bin ]; then PATH=/bin:$PATH; fi
            PATH=$LFS/tools/bin:$PATH
            export PATH
            export CONFIG_SITE=$LFS/usr/share/config.site
            export MAKEFLAGS='-j2'
            ./timeout './${{env.CURR}}'
      - name: Unmount
        run: |
            sleep 1m
            sudo umount /mnt/lfs           
      - name: Prepare image
        run: |
               tar -czvf out.tar.gz VHD.img
               tar -tzf out.tar.gz >/dev/null
      - uses: actions/upload-artifact@v2.3.1
        with:
          name: out-${{matrix.arch}}-${{env.CURR}}
          path: out.tar.gz
      - name: Rename
        run: mv out.tar.gz out-${{matrix.arch}}.tar.gz
      - name: Minio install and deploy
        run: |
            mcli cp out-${{matrix.arch}}.tar.gz myminio/bucket
  post:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Prepare host
        run: |
            export CURR=$(([ -z "${{ github.event.inputs.package }}" ] && echo ${{github.event.client_payload.number}})||echo ${{ github.event.inputs.package }})
            echo $CURR
            echo "PREV=$(($CURR-1))" >> $GITHUB_ENV
            echo "NEXT=$(($CURR+1))" >> $GITHUB_ENV
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TOKEN }}
          event-type: run-another-2
          client-payload: '{"number": "${{ env.NEXT }}"}'
